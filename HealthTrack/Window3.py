# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Win_3_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Window3(object):
    def setupUi(self, Window3):
        Window3.setObjectName("Window3")
        Window3.resize(1280, 720)
        
        self.center(Window3)
        
        self.background = QtWidgets.QLabel(Window3)
        self.background.setGeometry(QtCore.QRect(0, 0, 1280, 720))
        self.background.setText("")
        base_dir = os.path.dirname(os.path.abspath(__file__))
        fon_path = os.path.join(base_dir, "images", "whole_background.png")
        if os.path.exists(fon_path):
            pixmap = QtGui.QPixmap(fon_path)
            if not pixmap.isNull():
                self.background.setPixmap(pixmap)
                self.background.setScaledContents(True)
            else:
                print(f"Ошибка загрузки изображения: {fon_path}")
        else:
            print(f"Файл не найден: {fon_path}")
        self.background.setObjectName("background")
        self.frame = QtWidgets.QFrame(Window3)
        self.frame.setGeometry(QtCore.QRect(160, 64, 960, 572))
        self.frame.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 80px;")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(560, 120, 296, 296))
        self.label.setText("")
        base_dir = os.path.dirname(os.path.abspath(__file__))
        fon_path = os.path.join(base_dir, "images", "cross_o.png")
        if os.path.exists(fon_path):
            pixmap = QtGui.QPixmap(fon_path)
            if not pixmap.isNull():
                self.label.setPixmap(pixmap)
                self.label.setScaledContents(True)
            else:
                print(f"Ошибка загрузки изображения: {fon_path}")
        else:
            print(f"Файл не найден: {fon_path}")
        self.label.setObjectName("label")
        self.page3to2_btm = QtWidgets.QPushButton(self.frame)
        self.page3to2_btm.setGeometry(QtCore.QRect(523, 434, 183, 83))
        font = QtGui.QFont()
        font.setFamily("UbuntuSans-VariableFont_wdth,wght")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.page3to2_btm.setFont(font)
        self.page3to2_btm.setStyleSheet("QPushButton{\n"
"background-color: rgb(76, 162, 87);\n"
"border-radius: 40px;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgb(71, 146, 80);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"background-color: rgb(2, 151, 89);\n"
"border: 2px solid rgb(255,215,0);\n"
"color: rgb(248, 248, 242);\n"
"}")
        self.page3to2_btm.setObjectName("page3to2_btm")
        self.answer_btm = QtWidgets.QPushButton(self.frame)
        self.answer_btm.setGeometry(QtCore.QRect(715, 434, 183, 83))
        font = QtGui.QFont()
        font.setFamily("UbuntuSans-VariableFont_wdth,wght")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.answer_btm.setFont(font)
        self.answer_btm.setStyleSheet("QPushButton{\n"
"background-color: rgb(76, 162, 87);\n"
"border-radius: 40px;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgb(71, 146, 80);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"background-color: rgb(2, 151, 89);\n"
"border: 2px solid rgb(255,215,0);\n"
"color: rgb(248, 248, 242);\n"
"}")
        self.answer_btm.setObjectName("answer_btm")
        self.label_5 = QtWidgets.QLabel(self.frame)
        self.label_5.setGeometry(QtCore.QRect(154, 27, 198, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman [Mono]")
        font.setPointSize(32)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgb(0, 42, 5);")
        self.label_5.setObjectName("label_5")
        self.stomach = QtWidgets.QPushButton(self.frame)
        self.stomach.setGeometry(QtCore.QRect(48, 320, 210, 210))
        self.stomach.setStyleSheet("QPushButton{\n"
"background-color: rgba(255, 255, 255, 0);\n"
"border: 5px solid rgb(0,39,3);\n"
"border-radius: 24px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(38, 58, 34, 80);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"\n"
"border: 5px solid rgb(255,215,0);\n"
"\n"
"}")
        self.stomach.setText("")
        stomach = os.path.join(base_dir, "images", "stomach.png")
        if os.path.exists(stomach):
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap(stomach), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.stomach.setIcon(icon)
            self.stomach.setIconSize(QtCore.QSize(200, 200))
        else:
            print(f"Файл не найден: {stomach}")
        self.stomach.setObjectName("stomach")
        self.symptoms = QtWidgets.QTextEdit(self.frame)
        self.symptoms.setGeometry(QtCore.QRect(275, 93, 210, 437))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.symptoms.setFont(font)
        self.symptoms.setStyleSheet("background-color: rgba(255, 255, 255, 0);\n"
"border: 5px solid rgb(0,39,3);\n"
"border-radius: 30px;\n"
"color: rgb(0, 42, 5);")
        self.symptoms.setObjectName("symptoms")
        self.throat = QtWidgets.QPushButton(self.frame)
        self.throat.setGeometry(QtCore.QRect(48, 93, 210, 210))
        self.throat.setStyleSheet("QPushButton{\n"
"background-color: rgba(255, 255, 255, 0);\n"
"border: 5px solid rgb(0,39,3);\n"
"border-radius: 24px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(38, 58, 34, 80);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"\n"
"border: 5px solid rgb(255,215,0);\n"
"\n"
"}")
        self.throat.setText("")

        throat = os.path.join(base_dir, "images", "throat.png")
        if os.path.exists(throat):
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap(throat), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.throat.setIcon(icon)
            self.throat.setIconSize(QtCore.QSize(200, 200))
        else:
            print(f"Файл не найден: {throat}")

        self.throat.setObjectName("throat")

        self.stomach_selected = False
        self.throat_selected = False

        # Методы кнопок
        self.stomach.clicked.connect(self.toggle_stomach)
        self.throat.clicked.connect(self.toggle_throat)

        self.responsibillity = QtWidgets.QLabel(Window3)
        self.responsibillity.setGeometry(QtCore.QRect(280, 640, 728, 59))
        font = QtGui.QFont()
        font.setPointSize(17)
        self.responsibillity.setFont(font)
        self.responsibillity.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.responsibillity.setStyleSheet("color: rgb(102, 102, 102);")
        self.responsibillity.setAlignment(QtCore.Qt.AlignCenter)
        self.responsibillity.setObjectName("responsibillity")
        self.status_bar = QtWidgets.QLabel(Window3)
        self.status_bar.setGeometry(QtCore.QRect(238, 42, 803, 14))
        self.status_bar.setText("")
        base_dir = os.path.dirname(os.path.abspath(__file__))
        fon_path = os.path.join(base_dir, "images", "bar3.png")
        if os.path.exists(fon_path):
            pixmap = QtGui.QPixmap(fon_path)
            if not pixmap.isNull():
                self.status_bar.setPixmap(pixmap)
                self.status_bar.setScaledContents(True)
            else:
                print(f"Ошибка загрузки изображения: {fon_path}")
        else:
            print(f"Файл не найден: {fon_path}")
        self.status_bar.setObjectName("status_bar")

        self.retranslateUi(Window3)
        QtCore.QMetaObject.connectSlotsByName(Window3)

    def retranslateUi(self, Window3):
        _translate = QtCore.QCoreApplication.translate
        Window3.setWindowTitle(_translate("Window3", "HealthTrack"))
        self.page3to2_btm.setText(_translate("Window3", "Назад"))
        self.answer_btm.setText(_translate("Window3", "Загрузить"))
        self.label_5.setText(_translate("Window3", "Симптомы"))
        self.responsibillity.setText(_translate("Window3", "Авторы приложения не несут ответсвенности за Ваше здоровье. \n"
"Обязательно проконсультируйтесь с врачом."))

    def center(self, window):
        # Получаем геометрию основного экрана
        screen = QtWidgets.QDesktopWidget().screenGeometry()
        # Получаем геометрию окна
        window_geometry = window.frameGeometry()
        # Центрируем окно
        window_geometry.moveCenter(screen.center())
        # Перемещаем окно в центр экрана
        window.move(window_geometry.topLeft())

    def toggle_stomach(self):
        if not self.stomach_selected:
            # Выбираем stomach
            self.stomach.setStyleSheet("QPushButton{\n"
                                       "background-color: rgba(255, 255, 255, 0);\n"
                                       "border: 3px solid rgb(255,215,0);\n"
                                       "border-radius: 15px;\n"
                                       "}\n"
                                       "\n"
                                       "QPushButton:hover{\n"
                                       "    background-color: rgba(38, 58, 34, 80);\n"
                                       "}\n"
                                       "\n"
                                       "QPushButton:pressed{\n"
                                       "border: 3px solid rgb(255,215,0);\n"
                                       "}")
            self.stomach_selected = True
        else:
            # Отменяем выбор
            self.stomach.setStyleSheet("QPushButton{\n"
                                       "background-color: rgba(255, 255, 255, 0);\n"
                                       "border: 3px solid rgb(0,39,3);\n"
                                       "border-radius: 15px;\n"
                                       "}\n"
                                       "\n"
                                       "QPushButton:hover{\n"
                                       "    background-color: rgba(38, 58, 34, 80);\n"
                                       "}\n"
                                       "\n"
                                       "QPushButton:pressed{\n"
                                       "border: 3px solid rgb(255,215,0);\n"
                                       "}")
            self.stomach_selected = False

    def toggle_throat(self):
        if not self.throat_selected:
            # Выбираем throat
            self.throat.setStyleSheet("QPushButton{\n"
                                      "background-color: rgba(255, 255, 255, 0);\n"
                                      "border: 3px solid rgb(255,215,0);\n"
                                      "border-radius: 15px;\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:hover{\n"
                                      "    background-color: rgba(38, 58, 34, 80);\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed{\n"
                                      "border: 3px solid rgb(255,215,0);\n"
                                      "}")
            self.throat_selected = True
        else:
            # Отменяем выбор
            self.throat.setStyleSheet("QPushButton{\n"
                                      "background-color: rgba(255, 255, 255, 0);\n"
                                      "border: 3px solid rgb(0,39,3);\n"
                                      "border-radius: 15px;\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:hover{\n"
                                      "    background-color: rgba(38, 58, 34, 80);\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed{\n"
                                      "border: 3px solid rgb(255,215,0);\n"
                                      "}")
            self.throat_selected = False
