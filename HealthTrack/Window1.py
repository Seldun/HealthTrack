# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Win_1_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Window1(object):
    def setupUi(self, Window1):
        Window1.setObjectName("Window1")
        Window1.resize(1280, 720)

        self.center(Window1)

        self.background = QtWidgets.QLabel(Window1)
        self.background.setGeometry(QtCore.QRect(0, 0, 1280, 720))
        self.background.setText("")

        base_dir = os.path.dirname(os.path.abspath(__file__))
        fon_path = os.path.join(base_dir, "images", "whole_background.png")
        if os.path.exists(fon_path):
            pixmap = QtGui.QPixmap(fon_path)
            if not pixmap.isNull():
                self.background.setPixmap(pixmap)
                self.background.setScaledContents(True)
            else:
                print(f"Ошибка загрузки изображения: {fon_path}")
        else:
            print(f"Файл не найден: {fon_path}")

        self.background.setObjectName("background")
        self.frame = QtWidgets.QFrame(Window1)
        self.frame.setGeometry(QtCore.QRect(160, 64, 960, 572))
        self.frame.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 80px;")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(560, 120, 296, 296))
        self.label.setText("")

        base_dir = os.path.dirname(os.path.abspath(__file__))
        fon_path = os.path.join(base_dir, "images", "cross_o.png")
        if os.path.exists(fon_path):
            pixmap = QtGui.QPixmap(fon_path)
            if not pixmap.isNull():
                self.label.setPixmap(pixmap)
                self.label.setScaledContents(True)
            else:
                print(f"Ошибка загрузки изображения: {fon_path}")
        else:
            print(f"Файл не найден: {fon_path}")

        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(64, 64, 310, 35))
        font = QtGui.QFont()
        font.setFamily("Times New Roman [Mono]")
        font.setPointSize(22)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(0, 42, 5);")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.frame)
        self.label_3.setGeometry(QtCore.QRect(64, 192, 195, 35))
        font = QtGui.QFont()
        font.setFamily("Times New Roman [Mono]")
        font.setPointSize(22)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.frame)
        self.label_4.setGeometry(QtCore.QRect(64, 323, 55, 35))
        font = QtGui.QFont()
        font.setFamily("Times New Roman [Mono]")
        font.setPointSize(22)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.name = QtWidgets.QLineEdit(self.frame)
        self.name.setGeometry(QtCore.QRect(34, 112, 482, 61))
        font = QtGui.QFont()
        font.setFamily("Times New Roman [Mono]")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.name.setFont(font)
        self.name.setStyleSheet("background-color: rgba(255, 255, 255, 0);\n"
"border: 5px solid rgb(0,39,3);\n"
"border-radius: 30px;\n"
"color: rgb(0, 42, 5);\n"
"padding-left: 10px;")
        self.name.setObjectName("name")

        regex = QtCore.QRegExp("[А-Яа-яA-Za-z\- ]{0,75}")
        validator = QtGui.QRegExpValidator(regex)
        self.name.setValidator(validator)
        self.name.setMaxLength(75)  # макс длин

        self.female_btm = QtWidgets.QPushButton(self.frame)
        self.female_btm.setGeometry(QtCore.QRect(34, 368, 197, 165))
        self.female_btm.setStyleSheet("QPushButton{\n"
"background-color: rgba(255, 255, 255, 0);\n"
"border: 5px solid rgb(0,39,3);\n"
"border-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(38, 58, 34, 80);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"\n"
"border: 3px solid rgb(255,215,0);\n"
"\n"
"}")
        self.female_btm.setText("")
        female_btm = os.path.join(base_dir, "images", "вумен.png")
        if os.path.exists(female_btm):
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap(female_btm), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.female_btm.setIcon(icon)
            self.female_btm.setIconSize(QtCore.QSize(200, 200))
        else:
            print(f"Файл не найден: {female_btm}")
        self.female_btm.setObjectName("female_btm")
        self.male_btm = QtWidgets.QPushButton(self.frame)
        self.male_btm.setGeometry(QtCore.QRect(256, 368, 197, 165))
        self.male_btm.setStyleSheet("QPushButton{\n"
"background-color: rgba(255, 255, 255, 0);\n"
"border: 5px solid rgb(0,39,3);\n"
"border-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(38, 58, 34, 80);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"\n"
"border: 3px solid rgb(255,215,0);\n"
"\n"
"}")
        self.male_btm.setText("")
        male_icon_path = os.path.join(base_dir, "images", "мэн.png")
        if os.path.exists(male_icon_path):
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap(male_icon_path), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.male_btm.setIcon(icon)
            self.male_btm.setIconSize(QtCore.QSize(200, 200))
        else:
            print(f"Файл не найден: {male_icon_path}")
        self.male_btm.setObjectName("male_btm")
        self.page1to2_btm = QtWidgets.QPushButton(self.frame)
        self.page1to2_btm.setGeometry(QtCore.QRect(618, 450, 182, 83))
        font = QtGui.QFont()
        font.setFamily("UbuntuSans-VariableFont_wdth,wght")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.page1to2_btm.setFont(font)
        self.page1to2_btm.setStyleSheet("QPushButton{\n"
"background-color: rgb(76, 162, 87);\n"
"border-radius: 40px;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgb(71, 146, 80);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"background-color: rgb(2, 151, 89);\n"
"border: 2px solid rgb(255,215,0);\n"
"color: rgb(248, 248, 242);\n"
"}")
        self.page1to2_btm.setObjectName("page1to2_btm")
        self.birthday = QtWidgets.QDateEdit(self.frame)
        self.birthday.setGeometry(QtCore.QRect(34, 238, 482, 61))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.birthday.setFont(font)
        self.birthday.setStyleSheet("background-color: rgba(255, 255, 255, 0);\n"
"border: 5px solid rgb(0,39,3);\n"
"border-radius: 30px;\n"
"color: rgb(0, 42, 5);\n"
"size: 40px;")
        self.birthday.setFrame(True)
        self.birthday.setAlignment(QtCore.Qt.AlignCenter)
        self.birthday.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.birthday.setMaximumDate(QtCore.QDate(2025, 2, 1))
        self.birthday.setMinimumDate(QtCore.QDate(1925, 1, 2))
        self.birthday.setDate(QtCore.QDate(2008, 1, 1))
        self.birthday.setObjectName("birthday")
        self.responsibillity = QtWidgets.QLabel(Window1)
        self.responsibillity.setGeometry(QtCore.QRect(280, 640, 728, 59))
        font = QtGui.QFont()
        font.setPointSize(17)
        self.responsibillity.setFont(font)
        self.responsibillity.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.responsibillity.setStyleSheet("color: rgb(102, 102, 102);")
        self.responsibillity.setAlignment(QtCore.Qt.AlignCenter)
        self.responsibillity.setObjectName("responsibillity")
        self.status_bar = QtWidgets.QLabel(Window1)
        self.status_bar.setGeometry(QtCore.QRect(238, 42, 803, 14))
        self.status_bar.setText("")

        base_dir = os.path.dirname(os.path.abspath(__file__))
        fon_path = os.path.join(base_dir, "images", "bar1.png")
        if os.path.exists(fon_path):
            pixmap = QtGui.QPixmap(fon_path)
            if not pixmap.isNull():
                self.status_bar.setPixmap(pixmap)
                self.status_bar.setScaledContents(True)
            else:
                print(f"Ошибка загрузки изображения: {fon_path}")
        else:
            print(f"Файл не найден: {fon_path}")

        self.status_bar.setObjectName("status_bar")

        # Зажим кнопок
        self.male_selected = False
        self.female_selected = False

        self.male_btm.clicked.connect(self.toggle_male)
        self.female_btm.clicked.connect(self.toggle_female)

        self.retranslateUi(Window1)
        QtCore.QMetaObject.connectSlotsByName(Window1)

    def retranslateUi(self, Window1):
        _translate = QtCore.QCoreApplication.translate
        Window1.setWindowTitle(_translate("Window1", "HealthTrack"))
        self.label_2.setText(_translate("Window1", "Фамилия Имя Отчество"))
        self.label_3.setText(_translate("Window1", "Дата рождения"))
        self.label_4.setText(_translate("Window1", "Пол"))
        self.page1to2_btm.setText(_translate("Window1", "Далее"))
        self.responsibillity.setText(_translate("Window1", "Авторы приложения не несут ответсвенности за Ваше здоровье. \n"
"Обязательно проконсультируйтесь с врачом."))

    def center(self, window):
        # Получаем геометрию основного экрана
        screen = QtWidgets.QDesktopWidget().screenGeometry()
        # Получаем геометрию окна
        window_geometry = window.frameGeometry()
        # Центрируем окно
        window_geometry.moveCenter(screen.center())
        # Перемещаем окно в центр экрана
        window.move(window_geometry.topLeft())

    def toggle_male(self):
        if not self.male_selected:
            # Выбираем male
            self.male_btm.setStyleSheet("QPushButton{\n"
                                        "background-color: rgba(255, 255, 255, 0);\n"
                                        "border: 5px solid rgb(255,215,0);\n"
                                        "border-radius: 15px;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:hover{\n"
                                        "    background-color: rgba(38, 58, 34, 80);\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed{\n"
                                        "border: 5px solid rgb(255,215,0);\n"
                                        "}")
            self.female_btm.setStyleSheet("QPushButton{\n"
                                          "background-color: rgba(255, 255, 255, 0);\n"
                                          "border: 5px solid rgb(0,39,3);\n"
                                          "border-radius: 15px;\n"
                                          "}\n"
                                          "\n"
                                          "QPushButton:hover{\n"
                                          "    background-color: rgba(38, 58, 34, 80);\n"
                                          "}\n"
                                          "\n"
                                          "QPushButton:pressed{\n"
                                          "border: 5px solid rgb(255,215,0);\n"
                                          "}")
            self.male_selected = True
            self.female_selected = False
        else:
            # Отменяем выбор
            self.male_btm.setStyleSheet("QPushButton{\n"
                                        "background-color: rgba(255, 255, 255, 0);\n"
                                        "border: 5px solid rgb(0,39,3);\n"
                                        "border-radius: 15px;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:hover{\n"
                                        "    background-color: rgba(38, 58, 34, 80);\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed{\n"
                                        "border: 5px solid rgb(255,215,0);\n"
                                        "}")
            self.male_selected = False

    def toggle_female(self):
        if not self.female_selected:
            # Выбираем female
            self.female_btm.setStyleSheet("QPushButton{\n"
                                          "background-color: rgba(255, 255, 255, 0);\n"
                                          "border: 5px solid rgb(255,215,0);\n"
                                          "border-radius: 15px;\n"
                                          "}\n"
                                          "\n"
                                          "QPushButton:hover{\n"
                                          "    background-color: rgba(38, 58, 34, 80);\n"
                                          "}\n"
                                          "\n"
                                          "QPushButton:pressed{\n"
                                          "border: 5px solid rgb(255,215,0);\n"
                                          "}")
            self.male_btm.setStyleSheet("QPushButton{\n"
                                        "background-color: rgba(255, 255, 255, 0);\n"
                                        "border: 5px solid rgb(0,39,3);\n"
                                        "border-radius: 15px;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:hover{\n"
                                        "    background-color: rgba(38, 58, 34, 80);\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed{\n"
                                        "border: 5px solid rgb(255,215,0);\n"
                                        "}")
            self.female_selected = True
            self.male_selected = False
        else:
            # Отменяем выбор
            self.female_btm.setStyleSheet("QPushButton{\n"
                                          "background-color: rgba(255, 255, 255, 0);\n"
                                          "border: 5px solid rgb(0,39,3);\n"
                                          "border-radius: 15px;\n"
                                          "}\n"
                                          "\n"
                                          "QPushButton:hover{\n"
                                          "    background-color: rgba(38, 58, 34, 80);\n"
                                          "}\n"
                                          "\n"
                                          "QPushButton:pressed{\n"
                                          "border: 5px solid rgb(255,215,0);\n"
                                          "}")
            self.female_selected = False
